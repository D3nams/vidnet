version: '3.8'

services:
  app:
    build:
      context: .
      target: production
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - ENVIRONMENT=production
      - WORKERS=2
      - PERFORMANCE_MONITORING_ENABLED=true
      - RATE_LIMIT_REQUESTS_PER_MINUTE=100
      - RATE_LIMIT_REQUESTS_PER_HOUR=2000
      - METADATA_CACHE_TTL=3600
      - DOWNLOAD_CACHE_TTL=1800
    env_file:
      - .env.production
    volumes:
      - ./downloads:/app/downloads
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    restart: unless-stopped
    healthcheck:
      test: ["/usr/local/bin/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data_prod:/data
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 200mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/usr/share/nginx/html:ro
    depends_on:
      - app
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    restart: unless-stopped

volumes:
  redis_data_prod: